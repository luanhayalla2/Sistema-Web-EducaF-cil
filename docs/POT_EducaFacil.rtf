{\rtf1\ansi\deff0
{\fonttbl{\f0\fswiss Arial;}{\f1\froman Times New Roman;}}
{\colortbl ;\red21\green67\blue96;}
\pard\qc\fs36\b EducaF\'e7al - POT\par
\pard\qc\fs20\b Projeto Web de Gest\'c3o Escolar\par
\par
\pard\ql\fs24\b 1. Identifica\'e7\'e3o do Projeto\b0\fs20\par
\pard\li720\fs20\par
Nome do Projeto: EducaFácil\par
Tipo de Projeto: Sistema Web (Gestão Escolar)\par
Tema: Educação e Tecnologia\par
Integrantes: (Inserir nomes dos membros do grupo)\par
Professor Orientador: (Inserir nome)\par
Curso: Técnico em Desenvolvimento de Sistemas\par
Instituição: SENAC\par
Período Letivo: 2025\par
\par
\pard\fs24\b 2. Contextualização do Problema\b0\fs20\par
\pard\li720\fs20 Atualmente, muitas escolas, cursos técnicos e instituições de ensino enfrentam grandes dificuldades na organização das informações acadêmicas — como frequência dos alunos, lançamento de notas e comunicação com pais e responsáveis. Grande parte desse processo ainda é manual, feito por meio de planilhas, cadernos ou sistemas internos desatualizados.\par
\par
Essas práticas resultam em:\par
\pard\li1000\fs20 - Perda de informações importantes;\par
\pard\li1000 - Retrabalho na conferência de dados;\par
\pard\li1000 - Falta de transparência e comunicação com responsáveis;\par
\pard\li1000 - Dificuldade de análise de desempenho dos alunos.\par
\par
\pard\fs24\b 3. Objetivo Geral\b0\fs20\par
\pard\li720\fs20 Desenvolver um sistema web de gestão escolar simplificada, denominado EducaFácil, que permita o registro de frequência, lançamento de notas e geração de relatórios de desempenho por turma e por aluno, de forma intuitiva, responsiva e segura.\par
\par
\pard\fs24\b 4. Objetivos Específicos\b0\fs20\par
\pard\li720\fs20 - Implementar login seguro para professores e alunos, com controle de acesso.\par
- Criar módulos de cadastro para alunos, turmas e disciplinas.\par
- Permitir o registro diário de frequência de alunos por turma.\par
- Desenvolver o lançamento e consulta de notas por disciplina e por período.\par
- Gerar relatórios e gráficos de desempenho (presença e notas) com visualização clara.\par
- Garantir responsividade e acessibilidade da interface em dispositivos móveis e desktops.\par
- Armazenar os dados em um banco relacional (MySQL ou PostgreSQL) de forma estruturada.\par
- Documentar o projeto com README.md completo, código-fonte no GitHub e gestão no Trello.\par
\par
\pard\fs24\b 5. Escopo do Projeto (MVP)\b0\fs20\par
\pard\li720\fs20 Funcionalidades essenciais:\par
\pard\li1000 - Login: Autenticação de professores e alunos com credenciais únicas (Professor / Aluno)\par
- Cadastro de Alunos, Turmas e Disciplinas: Formulários para inserir, editar e excluir dados (Administrador / Professor)\par
- Registro de Presença: Professores marcam presença diária dos alunos (Professor)\par
- Lançamento de Notas: Professores inserem notas por disciplina e período (Professor)\par
- Relatórios de Desempenho: Tabelas e gráficos com médias, faltas e aproveitamento (Professor / Aluno)\par
- Interface Responsiva: Layout adaptável para celulares, tablets e desktops (Todos)\par
\par
\pard\fs24\b 6. Tecnologias Sugeridas\b0\fs20\par
\pard\li720\fs20 Front-end: React.js, Axios, Chart.js, CSS/Tailwind/Bootstrap\par
Back-end: Node.js (Express) ou Django REST Framework, JWT, RESTful API\par
Banco de Dados: PostgreSQL ou MySQL\par
\par
\pard\fs24\b 7. Estrutura do Sistema (Arquitetura)\b0\fs20\par
\pard\li720\fs20 Front-end (React) → Axios → API (Node/Django) → Banco de Dados (MySQL/PostgreSQL)\par
\par
\pard\fs24\b 8. Requisitos do Sistema\b0\fs20\par
\pard\li720\fs20 Requisitos Funcionais:\par
\pard\li1000 - Login com autenticação por usuário e senha;\par
- Cadastro/edição/exclusão de turmas, alunos e disciplinas;\par
- Lançamento de notas e registro de presenças;\par
- Visualização de notas e presença pelo aluno;\par
- Geração de relatórios gráficos de desempenho.\par
\par
Requisitos Não Funcionais:\par
\pard\li1000 - Interface responsiva e intuitiva;\par
- Armazenamento seguro e persistente;\par
- Autenticação via JWT;\par
- Projeto no GitHub com documentação;\par
- Gestão no Trello (Kanban).\par
\par
\pard\fs24\b 9. Cronograma (Exemplo)\b0\fs20\par
\pard\li720\fs20 1) Levantamento de requisitos e modelagem do banco: 15/10 – 25/10\par
2) Criação do back-end (API REST e banco): 26/10 – 10/11\par
3) Desenvolvimento do front-end: 11/11 – 25/11\par
4) Integração front/back: 26/11 – 05/12\par
5) Testes, correções e deploy local: 06/12 – 10/12\par
6) Documentação e entrega final: 11/12 – 15/12\par
\par
\pard\fs24\b 10. Entregas Obrigat\'f3rias\b0\fs20\par
\pard\li720\fs20 - Repositório no GitHub com o código\par
- Estrutura organizada (frontend / backend / banco)\par
- README.md com instruções de instalação e prints\par
- Quadro Kanban no Trello\par
- Apresentação final\par
\par
\pard\fs24\b 11. Poss\'edveis Extens\'f5es Futuras\b0\fs20\par
\pard\li720\fs20 - Notificações (e-mail/SMS)\par
- Área administrativa para professores\par
- Exportação de boletins em PDF\par
- Dashboard com indicadores gerais\par
- Integração com Google Calendar\par
\par
\pard\fs24\b 12. Conclus\'e3o\b0\fs20\par
\pard\li720\fs20 O EducaFácil busca modernizar e simplificar a gestão escolar, aproximando alunos, professores e responsáveis através de uma solução web eficiente, segura e de fácil uso.\par
\par
}\par
